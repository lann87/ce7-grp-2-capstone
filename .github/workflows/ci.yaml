name: CI workflow
run-name: Running CI workflow by ${{ github.actor }}

on:
  pull_request:
    branches:
      - "*"
    paths:
      - "terraform/*"

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  Terraform-Checks:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt check
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: terraform init -backend=false

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        id: lint
        run: tflint -f compact

  # get-id-token:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: |
  #         ID_TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://demo" | jq -r .value)
  #         echo $ID_TOKEN | base64

  Terraform-Plan:
    needs: [Terraform-Checks]
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          audience: sts.amazonaws.com
          role-to-assume: arn:aws:iam::255945442255:role/ce7-grp-2-oidc-role

      - name: Terraform Init
        run: terraform init

      - name: Terraform workspace list
        run: terraform workspace list

      - name: Terraform workspace new environment and select
        run: |
          terraform workspace select ${{ github.base_ref }} -or-create=true
          terraform workspace list

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file="${{ github.base_ref }}.tfvars"

      - name: Update Pull Request
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ needs.Terraform-Checks.steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ needs.Terraform-Checks.steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ needs.Terraform-Checks.steps.validate.outputs.stdout }}\`
            #### Terraform Lint üßπ\`${{ needs.Terraform-Checks.steps.lint.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
